'''
Bottom-up DP 문제

'''

x = int(input())

# DP table 초기화
d = [0] * 30001

# d[1] : 1에 도달할 때 까지의 최소 경우의 수 (0)
# d[2] : 2에 도달할 때 까지의 최소 경우의 수 (1)
'''
Top-down
'''
# ex) x = 26
# d[26] : 26에 도달할 때 까지의 최소 경우의 수
# d[26] = d[25]+1 (1을 빼는 경우) or d[13]+1 (2로 나누는 경우)
#           d[25] = d[5]+1 or d[24]
#           d[13] = d[12]+1

'''
Bottom-up
'''
# 다이나믹 프로그래밍 진행(Bottom-up)
# +1을 해주는 이유는 도달하는 데 걸리는 수를 저장하기 위함.
for i in range(2, x + 1):
    d[i] = d[i - 1] + 1 # 현재의 수에서 1을 빼는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x])

